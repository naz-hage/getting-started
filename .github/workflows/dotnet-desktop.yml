name: .Net Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-test:
    name: Build and Test
    runs-on: windows-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Install ntools
      run: |
        cd ./DevSetup
        # Get the common Install module and import it
        $url = "https://raw.githubusercontent.com/naz-hage/ntools/main/DevSetup/install.psm1"
        $output = "./install.psm1"
        Invoke-WebRequest -Uri $url -OutFile $output
        Import-Module ./install.psm1 -Force
        
        $fileName = Split-Path -Leaf $PSCommandPath
        Write-OutputMessage $fileName "Started installation script."
        
        # Check if the script is running with admin rights
        if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
            Write-OutputMessage $fileName "Error: Please run this script as an administrator."
            exit 1
        } else {
            Write-OutputMessage $fileName "Admin rights detected"
        }
        
        # Install Ntools
        MainInstallApp -command install -json .\app-Ntools.json
        if ($LASTEXITCODE -ne 0) {
            Write-OutputMessage $fileName "Error: Installation of ntools (app-Ntools.json) failed. Exiting script."
            exit 1
        }
        
        Write-OutputMessage $fileName "Completed installation script."
        Write-OutputMessage $fileName "EmtpyLine"
      shell: pwsh
      working-directory: ${{ github.workspace }}

    - name: Set ProgramFiles Path
      run: |
        $programFilesPath = [System.Environment]::GetFolderPath('ProgramFiles')
        echo "ProgramFilesPath=$programFilesPath" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh
      working-directory: ${{ github.workspace }}
   
    - name: Configure Git
      run: |
        git config --global user.name "gitHub-actions"
        git config --global user.email "actions@github.com"

    - name: Build and test using ntools
      run: |
        & "$env:ProgramFilesPath/nbuild/nb.exe" staging
      shell: pwsh
      working-directory: ${{ github.workspace }}
